@Override
	public void complete_HEX(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		// compute last high address
		Model rootModel = (Model)context.getRootModel();
		EList<Block> memBlocks = rootModel.getBlocks();
		
		Block lastBlock = null;
		if (memBlocks != null && memBlocks.size() > 0) {
			// if we are at the end
			if (model instanceof Model) {
				lastBlock = memBlocks.get(memBlocks.size() - 1);
			} else if (model instanceof Block) {
				// see what was the previous block
				int crBlockIndex = memBlocks.indexOf(model);
				if (crBlockIndex > 0) {
					lastBlock = memBlocks.get(crBlockIndex - 1);
				}
			}
		}
		
		String proposal = "0x00000000";
		if (lastBlock != null) {
			// compute the plain proposal
			proposal = "0x" + Long.toHexString(Long.parseLong(lastBlock.getHiAddr().substring(2), 16) + 1).toUpperCase() ;
		}
		
		// convert it to a valid STRING-terminal
		proposal = getValueConverter().toString(proposal, "HEX");
		// create the completion proposal
		// the result may be null as the createCompletionProposal(..) methods
		// check for valid prefixes
		// and terminal token conflicts
		ICompletionProposal completionProposal = createCompletionProposal(
				proposal, context);
		// register the proposal, the acceptor handles null-values gracefully
		acceptor.accept(completionProposal);
	}
 